{"version":3,"sources":["helper/index.js","components/Cell.jsx","assets/img/game-over.gif","components/GameOver.jsx","components/Tile.jsx","components/BoardView.jsx","helper/hooks/useEvent.js","App.js","index.js"],"names":["rotateLeft","matrix","rows","length","columns","res","row","push","column","Tile","value","this","oldRow","oldColumn","markForDeletion","mergedInto","id","fromRow","toRow","fromColumn","toColumn","Board","tiles","cells","score","size","fourProbability","deltaX","deltaY","i","addTile","addRandomTile","setPositions","won","args","hasChanged","currentRow","filter","tile","resultRow","target","targetTile","shift","tile1","tile2","forEach","rowIndex","columnIndex","emptyCells","r","c","cell","Math","random","newValue","direction","clearOldTiles","moveLeft","canMove","dir","newRow","newColumn","Cell","className","GameOver","onRestart","board","hasWon","hasLost","onClick","src","GameOveer","alt","style","background","width","height","cursor","classArray","isNew","hasMoved","classes","join","BoardView","useState","setBoard","event","handler","passive","useEffect","window","addEventListener","removeEventListener","useEvent","keyCode","resetGame","newBoard","Object","assign","create","getPrototypeOf","move","map","col","colIndex","index","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.077dbd87.chunk.js","sourcesContent":["var rotateLeft = function (matrix) {\n  var rows = matrix.length;\n  var columns = matrix[0].length;\n  var res = [];\n  for (var row = 0; row < rows; ++row) {\n    res.push([]);\n    for (var column = 0; column < columns; ++column) {\n      res[row][column] = matrix[column][columns - row - 1];\n    }\n  }\n  return res;\n};\n\nclass Tile {\n  constructor(value, row, column) {\n    this.value = value || 0;\n    this.row = row || -1;\n    this.column = column || -1;\n    this.oldRow = -1;\n    this.oldColumn = -1;\n    this.markForDeletion = false;\n    this.mergedInto = null;\n    this.id = this.id++ || 0;\n  }\n  moveTo(row, column) {\n    this.oldRow = this.row;\n    this.oldColumn = this.column;\n    this.row = row;\n    this.column = column;\n  }\n  isNew() {\n    return this.oldRow === -1 && !this.mergedInto;\n  }\n  hasMoved() {\n    return (\n      (this.fromRow() !== -1 &&\n        (this.fromRow() !== this.toRow() ||\n          this.fromColumn() !== this.toColumn())) ||\n      this.mergedInto\n    );\n  }\n  fromRow() {\n    return this.mergedInto ? this.row : this.oldRow;\n  }\n  fromColumn() {\n    return this.mergedInto ? this.column : this.oldColumn;\n  }\n  toRow() {\n    return this.mergedInto ? this.mergedInto.row : this.row;\n  }\n  toColumn() {\n    return this.mergedInto ? this.mergedInto.column : this.column;\n  }\n}\n\nclass Board {\n  constructor() {\n    this.tiles = [];\n    this.cells = [];\n    this.score = 0;\n    this.size = 4;\n    this.fourProbability = 0.1;\n\n    this.deltaX = [-1, 0, 1, 0];\n    this.deltaY = [0, -1, 0, 1];\n    \n    for (var i = 0; i < this.size; ++i) {\n      this.cells[i] = [\n        this.addTile(),\n        this.addTile(),\n        this.addTile(),\n        this.addTile(),\n      ];\n    }\n    this.addRandomTile();\n    this.addRandomTile();\n    this.setPositions();\n    this.won = false;\n  }\n  addTile(args) {\n    var res = new Tile(args);\n    this.tiles.push(res);\n    return res;\n  }\n\n  moveLeft() {\n    var hasChanged = false;\n    for (var row = 0; row < this.size; ++row) {\n      var currentRow = this.cells[row].filter((tile) => tile.value !== 0);\n      var resultRow = [];\n      for (var target = 0; target < this.size; ++target) {\n        var targetTile = currentRow.length\n          ? currentRow.shift()\n          : this.addTile();\n        if (currentRow.length > 0 && currentRow[0].value === targetTile.value) {\n          var tile1 = targetTile;\n          targetTile = this.addTile(targetTile.value);\n          tile1.mergedInto = targetTile;\n          var tile2 = currentRow.shift();\n          tile2.mergedInto = targetTile;\n          targetTile.value += tile2.value;\n          this.score += tile1.value + tile2.value;\n        }\n        resultRow[target] = targetTile;\n        this.won |= targetTile.value === 2048;\n        hasChanged |= targetTile.value !== this.cells[row][target].value;\n      }\n      this.cells[row] = resultRow;\n    }\n    return hasChanged;\n  }\n  \n  setPositions() {\n    this.cells.forEach((row, rowIndex) => {\n      row.forEach((tile, columnIndex) => {\n        tile.oldRow = tile.row;\n        tile.oldColumn = tile.column;\n        tile.row = rowIndex;\n        tile.column = columnIndex;\n        tile.markForDeletion = false;\n      });\n    });\n  }\n  addRandomTile() {\n    var emptyCells = [];\n    for (var r = 0; r < this.size; ++r) {\n      for (var c = 0; c < this.size; ++c) {\n        if (this.cells[r][c].value === 0) {\n          emptyCells.push({ r: r, c: c });\n        }\n      }\n    }\n    var index = ~~(Math.random() * emptyCells.length);\n    var cell = emptyCells[index];\n    var newValue = Math.random() < this.fourProbability ? 4 : 2;\n    this.cells[cell.r][cell.c] = this.addTile(newValue);\n  }\n  move(direction) {\n    // 0 -> left, 1 -> up, 2 -> right, 3 -> down\n    this.clearOldTiles();\n    for (var i = 0; i < direction; ++i) {\n      this.cells = rotateLeft(this.cells);\n    }\n    var hasChanged = this.moveLeft();\n    for (let i = direction; i < 4; ++i) {\n      this.cells = rotateLeft(this.cells);\n    }\n    if (hasChanged) {\n      this.addRandomTile();\n    }\n    this.setPositions();\n    return this;\n  }\n  clearOldTiles() {\n    this.tiles = this.tiles.filter((tile) => tile.markForDeletion === false);\n    this.tiles.forEach((tile) => {\n      tile.markForDeletion = true;\n    });\n  }\n  hasWon() {\n    return this.won;\n  }\n  hasLost() {\n    var canMove = false;\n    for (var row = 0; row < this.size; ++row) {\n      for (var column = 0; column < this.size; ++column) {\n        canMove |= this.cells[row][column].value === 0;\n        for (var dir = 0; dir < 4; ++dir) {\n          var newRow = row + this.deltaX[dir];\n          var newColumn = column + this.deltaY[dir];\n          if (\n            newRow < 0 ||\n            newRow >= this.size ||\n            newColumn < 0 ||\n            newColumn >= this.size\n          ) {\n            continue;\n          }\n          canMove |=\n            this.cells[row][column].value ===\n            this.cells[newRow][newColumn].value;\n        }\n      }\n    }\n    return !canMove;\n  }\n}\n\nexport { Board };\n","import React from 'react'\n\nconst Cell = () => {\n    return (\n        <div className=\"cell\">\n            \n        </div>\n    )\n}\n\nexport default Cell\n","export default __webpack_public_path__ + \"static/media/game-over.7223586a.gif\";","import React from \"react\";\nimport GameOveer from \"../assets/img/game-over.gif\";\n\nconst GameOver = ({ onRestart, board }) => {\n  if (board.hasWon()) {\n    return <div className=\"tile2048\"></div>;\n  } else if (board.hasLost()) {\n    return (\n      <div className=\"gameOver\" onClick={onRestart}>\n        <img\n          src={GameOveer}\n          alt=\"Try Again\"\n          style={{\n            background:'white',\n            width: \"100%\",\n            height: \"100%\",\n            cursor: \"pointer\",\n          }}\n        />\n      </div>\n    );\n        }\n\n  return null;\n};\n\nexport default GameOver;\n","import React from \"react\";\n\nconst Tile = ({tile}) => {\n  let classArray = [\" tile \"];\n  classArray.push(\"tile\" + tile.value);\n\n  if (!tile.mergedInto) {\n    classArray.push(`position_${tile.row}_${tile.column}`);\n  }\n\n  if (tile.mergedInto) {\n    classArray.push(\"merged\");\n  }\n\n  if (tile.isNew()) {\n    classArray.push(\"new\");\n  }\n\n  if (tile.hasMoved()) {\n    classArray.push(`row_from_${tile.fromRow()}_to_${tile.toRow()}`);\n    classArray.push(`column_from_${tile.fromColumn()}_to_${tile.toColumn()}`);\n\n    classArray.push(\"isMoving\");\n  }\n\n  let classes = classArray.join(\" \");\n\n  return <div className={classes}></div>;\n};\n\nexport default Tile;\n","import React, { useState } from \"react\";\nimport { Board } from \"../helper\";\nimport useEvent from \"../helper/hooks/useEvent\";\nimport Cell from \"./Cell\";\nimport GameOver from \"./GameOver\";\nimport Tile from \"./Tile\";\n\nconst BoardView = () => {\n  const [board, setBoard] = useState(new Board());\n\n  const handlekeyDown = (event) => {\n    if (event.keyCode === 78) {\n      resetGame();\n    }\n\n    if (board.hasWon()) return;\n\n    // console.log(\"Key \", event.keyCode);\n    if (board.hasLost()) return;\n\n    if (event.keyCode >= 37 && event.keyCode <= 40) {\n      let direction = event.keyCode - 37;\n\n      // deep clone of board object\n      let boardClone = Object.assign(\n        Object.create(Object.getPrototypeOf(board)),\n        board\n      );\n\n      let newBoard = boardClone.move(direction);\n      setBoard(newBoard);\n    }\n  };\n\n  useEvent(\"keydown\", handlekeyDown);\n\n  const cells = board.cells.map((row, rowIndex) => {\n    return (\n      <div key={rowIndex}>\n        {row.map((col, colIndex) => {\n          return <Cell key={rowIndex * board.size + colIndex} />;\n        })}\n      </div>\n    );\n  });\n\n  const tiles = board.tiles\n    .filter((tile) => tile.value !== 0)\n    .map((tile, index) => {\n      return <Tile tile={tile} key={index} />;\n    });\n\n  const resetGame = () => {\n    setBoard(new Board());\n  };\n\n  return (\n    <div>\n      <div className=\"details-box\">\n        <div className=\"resetButton\" onClick={resetGame}>\n          New Game\n        </div>\n        <div className=\"details-box\">\n          <div className=\"score-box\">\n            <div className=\"score-title\">Score</div>\n            <div className=\"\">{board.score}</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"board\">\n        {cells}\n        {tiles}\n      </div>\n      <div>\n        <GameOver onRestart={resetGame} board={board} />\n      </div>\n    </div>\n  );\n};\n\nexport default BoardView;\n","import { useEffect } from \"react\";\n\nexport default function useEvent(event, handler, passive = false) {\n  useEffect(() => {\n    window.addEventListener(event, handler, passive);\n\n    return function cleanUp() {\n      window.removeEventListener(event, handler, passive);\n    };\n  });\n}\n","import BoardView from \"./components/BoardView\";\nimport \"./main.scss\";\nimport \"./styles.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BoardView/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}